# Config for sway
#
# Default config find at /etc/sway/config
# Read `man 5 sway` for a complete reference.

# colors from pywal
include "$HOME/.cache/wal/colors-sway"

# Set window/dispaly rules for specific applications
include $XDG_CONFIG_HOME/sway/config.d/*

### Variables
# Logo key used as mod
set $mod Mod4

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Preferred terminal emulator
set $term alacritty

# Border values
set $border_size 4
set $gaps_def_inc 5
exec border pixel $border_size
client.focused #4c7899 #ffffff #000000

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu bemenu-run -b -l 10 --scrollbar=always -H 25 -m all --no-exec | xargs swaymsg exec --
set $file swaymsg exec -- $term -e lf

### Output configuration
# use personal script to set background
exec setbg

# To get the names of other outputs run: swaymsg -t get_outputs
output eDP-1 scale 2.5
# note: this will be amended by kanshi

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' \
#               resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.


### Input configuration
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Touchpad
#
input type:touchpad {
	dwt enabled
	natural_scroll enabled
	tap enabled
       	middle_emulation enabled
}

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+q kill

    # Start your launcher
    bindsym $mod+d exec $menu
    bindsym $mod+o exec $file

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+r reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
    # Launch system power menu in bemenu
    bindsym $mod+Shift+Escape exec power_menu.sh
    # Launch system screenshot menu in bemenu
    # by saving picture
    bindsym Print exec screenshot_menu.sh save
    # by coping to clipboard 
    bindsym Shift+Print exec screenshot_menu.sh copy
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace 1
    bindsym $mod+2 workspace 2
    bindsym $mod+3 workspace 3
    bindsym $mod+4 workspace 4
    bindsym $mod+5 workspace 5
    bindsym $mod+6 workspace 6
    bindsym $mod+7 workspace 7
    bindsym $mod+8 workspace 8
    bindsym $mod+9 workspace 9
    bindsym $mod+0 workspace 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace 1
    bindsym $mod+Shift+2 move container to workspace 2
    bindsym $mod+Shift+3 move container to workspace 3
    bindsym $mod+Shift+4 move container to workspace 4
    bindsym $mod+Shift+5 move container to workspace 5
    bindsym $mod+Shift+6 move container to workspace 6
    bindsym $mod+Shift+7 move container to workspace 7
    bindsym $mod+Shift+8 move container to workspace 8
    bindsym $mod+Shift+9 move container to workspace 9
    bindsym $mod+Shift+0 move container to workspace 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    # Go back and forth between the current and the previous workspace
    # https://i3wm.org/docs/userguide.html#back_and_forth
    # Discussion on how to alternate between windows:
    # https://github.com/i3/i3/issues/838
    bindsym $mod+Shift+Tab workspace back_and_forth

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # for horizontal and vertical splits respectively.
    bindsym $mod+alt+h splith
    bindsym $mod+alt+v splitv


    ## Border
    default_border pixel $border_size
    #hide_edge_borders smart_no_gaps
    smart_borders no_gaps
    default_floating_border normal $border_size
    # Toggle border apperance
    bindsym $mod+b border normal $border_size
    bindsym $mod+Shift+b border pixel $border_size

    ##Gaps
    bindsym $mod+g gaps inner current plus $gaps_def_inc
    bindsym $mod+Shift+g gaps inner current set 0


    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command while  echo "ï‰€ $(cat /sys/class/power_supply/BAT0/capacity)%  $(date +'%d-%m-%Y %l:%M %p')"; do sleep 60; done

    colors {
        #statusline $foreground
        #background $background
        inactive_workspace #32323200 #32323200 #5c5c5c
    }
}

include /etc/sway/config.d/*


## Font
#
#font "Iosevka SS08 Semibold Extended"
font "monospace"
#font "OCRA"

## Display manager for multiple displays
#
# config files in .config/kanshi/cofig
exec_always pkill kanshi; exec kanshi
##exec kanshi
# enable autotiling
# needs autotiling package
exec autotiling
